apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-datacenter-service-config
data:
  application.yaml: |-
    client:
      id: {{ .Values.config.auth.clientId | quote }}
      secret: {{ .Values.config.auth.clientSecret | quote }}
      apiEndpoint: {{ .Values.config.auth.apiEndpoint | quote }}
      tokenUri: {{ .Values.config.auth.tokenUri | quote }}
      checkTokenUri: {{ .Values.config.auth.checkTokenUri | quote }}
      jwkSetUri: {{ .Values.config.auth.jwkSetUri | quote }}

    dustlight:
      auth:
        oauth2:
          client:
            client-id: ${client.id}
            client-secret: ${client.secret}
            api-endpoint: ${client.apiEndpoint}
            token-uri: ${client.tokenUri}
          resource-server:
            client-id: ${client.id}
            client-secret: ${client.secret}
            uri: ${client.checkTokenUri}
            jwk-set-uri: ${client.jwkSetUri}
      datacenter:
        form:
          schema-additional:
            - key: $id
              value: ${dustlight.datacenter.schema.parameters.endpoint}/${dustlight.datacenter.schema.parameters.prefix}/
            - key: $schema
              value: ${dustlight.datacenter.schema.parameters.endpoint}/${dustlight.datacenter.schema.parameters.prefix}${dustlight.datacenter.schema.adapter.form-schema}
        authorization-endpoint: {{ .Values.config.auth.authorizationEndpoint | quote }}
        mongo:
          form-collection: form
          record-collection: form_record
        amqp:
          exchange: datacenter-{{ .Release.Name }}
          sync:
            enabled: true
            queue: datacenter-{{ .Release.Name }}-sync
            dead-letter-queue: datacenter-{{ .Release.Name }}-sync-dead
        schema:
          parameters:
            prefix: v1/schemas
            endpoint: http{{ if .Values.ingress.tls.enabled }}s{{ end }}://{{ .Values.ingress.host }}
          mapping: /${dustlight.datacenter.schema.parameters.prefix}/**
          adapter:
            meta-schema: /schema
            form-schema: /form
            non-validation-keywords:
              - form
        elasticsearch:
          record-prefix: {{ .Values.config.mongodb.database }}.form_record
          form-prefix: {{ .Values.config.mongodb.database }}.form
    # SpringDoc 配置
    springdoc:
      api-docs:
        enabled: on
        path: /doc
      swagger-ui:
        path: /doc.html
        oauth:
          client-id: ${client.id}
          additional-query-string-params:
            jwt: true
    spring:
      data:
        mongodb:
          uri: {{ .Values.config.mongodb.uri | quote }}
        elasticsearch:
          client:
            reactive:
              endpoints:
                {{- range .Values.config.elasticsearch.endpoints }}
                - {{ . | quote }}
                {{- end }}
      rabbitmq:
        addresses: {{ .Values.config.rabbitmq.host | quote }}
        port: {{ .Values.config.rabbitmq.port }}
        username: {{ .Values.config.rabbitmq.username | quote }}
        password: {{ .Values.config.rabbitmq.password | quote }}
    logging:
      level:
        cn.dustlight.datacenter.*: {{ .Values.logging }}
