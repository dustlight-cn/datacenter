# OAuth 配置
plus:
  oauth2:
    client:
      client-id: 877ce1dd5030000
      client-secret: 1283d148237af330152929cfe05ec045b0a4e92d
      api-endpoint: http://api.wgv.ink
      token-uri: http://api.wgv.ink/v1/oauth/token
    resource-server:
      jwk-set-uri: http://api.wgv.ink/v1/jwk
      client-secret: none
      client-id: none
      uri: http://api.wgv.ink/v1/token/validity
      token-type: jwt
  datacenter:
    form:
      schema-additional:
        - key: $id
          value: ${plus.datacenter.schema.parameters.endpoint}/${plus.datacenter.schema.parameters.prefix}/
        - key: $schema
          value: ${plus.datacenter.schema.parameters.endpoint}/${plus.datacenter.schema.parameters.prefix}${plus.datacenter.schema.adapter.form-schema}
    authorization-endpoint: "http://accounts.wgv.ink/authorize"
    mongo:
      form-collection: form
      record-collection: form_record
    amqp:
      exchange: datacenter
      sync:
        enabled: true
        queue: datacenter-sync
        dead-letter-queue: datacenter-sync-dead
    schema:
      parameters:
        prefix: v1/schemas
        endpoint: http://localhost:8080
      mapping: /${plus.datacenter.schema.parameters.prefix}/**
      adapter:
        meta-schema: /schema
        form-schema: /form
        non-validation-keywords:
          - form
    elasticsearch:
      record-prefix: datacenter.form_record
      form-prefix: datacenter.form
# SpringDoc 配置
springdoc:
  api-docs:
    enabled: on
    path: /doc
  swagger-ui:
    path: /doc.html
    oauth:
      client-id: 86c3e34e2030000
      additional-query-string-params:
        jwt: true
spring:
  data:
    mongodb:
      uri: mongodb://my-user:MTIzNDU2@localhost:27017/datacenter?authSource=admin&appname=datacenter&directConnection=true
    elasticsearch:
      client:
        reactive:
          endpoints:
            - localhost
  rabbitmq:
    addresses: localhost
    port: 5672
    username: datacenter
    password: datacenter
logging:
  level:
    plus.datacenter.*: debug
